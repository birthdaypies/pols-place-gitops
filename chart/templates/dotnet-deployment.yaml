apiVersion: apps/v1
kind: Deployment
metadata:
  name: pols-place
  namespace: birthdays
  labels: 
    apps: pols-place
    release: pols-place
spec:
  revisionHistoryLimit: 0
  selector: 
    matchLabels:
      app: pols-place
  replicas: 1
  template:
    metadata:
      name: pols-place
      labels:
        app: pols-place
      annotations:
        valuesChecksum: {{ .Values | toYaml | sha256sum | trunc 63 }}
    spec:
      restartPolicy: Always
      imagePullSecrets:
      - name: {{ .Values.deployment.image.pullSecret.name }}

      containers:
      - name: pols-place
        image: {{ .Values.deployment.image.registry.host }}/{{ .Values.deployment.image.registry.repository.name }}/{{ .Values.deployment.image.name }}:{{ .Values.deployment.image.tag }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}

        {{ if .Values.deployment.probes.liveness.enabled }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.deployment.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.liveness.timeoutSeconds }}
          successThreshold: {{ .Values.deployment.probes.liveness.successThreshold }}
          failureThreshold: {{ .Values.deployment.probes.liveness.failureThreshold }}
          httpGet: 
            path: {{ .Values.deployment.probes.liveness.path | quote }}
            port: {{ .Values.deployment.probes.liveness.port }}
        {{ end }}
        
        {{- if .Values.deployment.probes.readiness.enabled }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.deployment.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.readiness.timeoutSeconds }}
          successThreshold: {{ .Values.deployment.probes.readiness.successThreshold }}
          failureThreshold: {{ .Values.deployment.probes.readiness.failureThreshold }}
          httpGet: 
            path: {{ .Values.deployment.probes.readiness.path | quote }}
            port: {{ .Values.deployment.probes.readiness.port }}
        {{- end }}
        
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
          
        resources:
          requests:
            memory: {{ .Values.deployment.resources.requests.memory }}
            cpu: {{ .Values.deployment.resources.requests.cpu }}
            ephemeral-storage: {{ .Values.deployment.resources.requests.ephemeralStorage }}
          limits:
            memory: {{ .Values.deployment.resources.limits.memory }}
            cpu: {{ .Values.deployment.resources.limits.cpu }}
            ephemeral-storage: {{ .Values.deployment.resources.limits.ephemeralStorage }}

        volumeMounts:
        {{- if .Values.deployment.appsettings }}
        - name: appsettings-volume
          mountPath: /app/appsettings.json
          subPath: appsettings.json
        {{- end }}

      volumes: 
      {{- if .Values.deployment.appsettings }}
      - name: appsettings-volume
        configMap:
          name: pols-place-appsettings
          defaultMode: 0777
      {{- end }}